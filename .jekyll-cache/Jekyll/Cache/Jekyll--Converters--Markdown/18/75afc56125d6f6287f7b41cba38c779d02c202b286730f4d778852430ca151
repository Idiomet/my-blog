I"<h2 id="intro-on-http-messages">Intro on HTTP Messages</h2>
<p>HTTP messages are how a server and a client can communicate data with each other on the web. A server is a remote computer providing data, while a client is a local computer requesting data from the server.</p>

<p>There are two types of HTTP messages, requests and responses. A request is sent by the client to either send or retrieve data to or from the server. A response is the reply from the server, in response to a request. These two types of messages are made up of ASCII text and can have multiple lines of text.</p>

<h2 id="http-message-structure">HTTP Message Structure</h2>
<p>Head:</p>
<ol>
  <li>Start-line: Describes the request to be made or the status of the response</li>
  <li>Headers: Specify the request or describes details about the body of the message</li>
  <li>Blank line to indicate the end of the above metadata</li>
</ol>

<p>Payload:</p>
<ol>
  <li>Optional body containing data associated with the request or response</li>
</ol>

<p><img src="../assets/HTTPMsgStructure2.png" alt="https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages" />
<code class="language-plaintext highlighter-rouge">Image source: https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages</code></p>

<h2 id="http-requests">HTTP Requests</h2>
<p>HTTP requests are messages sent by the client to either send data or retrieve data from a server.</p>

<h3 id="start-line">Start-line</h3>
<p>The start-line (first line) in the request contains the following three elements:</p>
<ol>
  <li>HTTP method such as GET or POST that describes the action to be performed
    <ul>
      <li>GET method retrieves data from a server</li>
      <li>POST method sends data to a server accompanied by a payload</li>
    </ul>
  </li>
  <li>Request target which is usually a URL</li>
  <li>HTTP version which defines which version of HTTP to use</li>
</ol>

<h3 id="headers">Headers</h3>
<p>There are 3 groups of headers.</p>
<ol>
  <li>General headers which apply to the whole HTTP message.</li>
  <li>Request headers which modify the request itself.</li>
  <li>Entity headers which apply to the body only.</li>
</ol>

<h3 id="body">Body</h3>
<p>The last part of the request is the body. Not all requests are required to have a body, but a body is required for requests using the POST method. It is used to indicate what data is being sent. There are two types of bodies. The first type of body is single-resource bodies, which consist of one single file. The second type of body is multiple-resource bodies, which consist of multiple parts.</p>

<h3 id="example-of-a-http-request">Example of a HTTP request</h3>
<p><img src="../assets/HTTP_Request_Headers2.png" alt="https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages" />
<code class="language-plaintext highlighter-rouge">Image source: https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages)</code></p>

<h2 id="http-request-test-using-discord-webhooks">HTTP Request Test using Discord Webhooks</h2>
<p>Now that you’re familiar with how HTTP requests and responses work, let’s do a quick demo using curl and Discord webhooks. The curl command allows you to transfer data from or to a server. Discord webhooks allow you to receive data from a request and displays that data into your Discord channel.</p>

<h3 id="create-a-discord-webhook">Create a Discord Webhook</h3>
<ol>
  <li>In your Discord server, click on the Edit Channel icon on the channel that you want to create your webhook in.</li>
  <li>Click on Integrations.</li>
  <li>Click on View Webhooks.</li>
  <li>Click on New Webhook.</li>
  <li>Click on Copy Webhook URL. Save this URL somewhere, we will be using it later to send a request.</li>
</ol>

<h3 id="using-the-curl-command">Using the curl command</h3>
<ol>
  <li>Open your terminal and enter this:<br />
<code class="language-plaintext highlighter-rouge">curl -X POST -H "Content-Type: application/json" -d '{"username": "Testing the Webhook", "content": "hello world"}' "WEBHOOK_URL_HERE"</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">-X POST</code> indicates the usage of the POST request method to send data</li>
      <li><code class="language-plaintext highlighter-rouge">-H "Content-Type: application/json"</code> indicates that you are going to be sending JSON data in the body</li>
      <li><code class="language-plaintext highlighter-rouge">-d</code> indicates that you are sending the specified data in the request</li>
      <li><code class="language-plaintext highlighter-rouge">WEBHOOK_URL_HERE</code> Enter the webhook url that you copied earlier and replace this with that url.</li>
    </ul>
  </li>
  <li>If successful, you should see the following message in your Discord channel.</li>
</ol>

<p><img src="../assets/Discord.png" alt="Discord webhook test message" /></p>

:ET